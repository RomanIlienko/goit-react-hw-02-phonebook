{"version":3,"sources":["components/Filter/Filter.module.css","components/TodoContact/TodoContact.module.css","components/TodoContact/TodoContact.js","components/ContactsList/ContactsList.js","components/Filter/Filter.js","App.js","index.js","components/ContactsList/ContactsList.module.css"],"names":["module","exports","TodoContact","state","name","number","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","className","s","titleText","this","headStyle","labelStyle","inputStyle","onChange","type","button","Component","ContactsList","contacts","onDeleteContact","map","id","listItem","onClick","Filter","filterTitle","defaultProps","filterValue","App","filter","addContact","todo","shortid","generate","alreadyInContacts","find","contact","alert","prevState","ChangeFilter","deleteContact","todoId","normalizedFilter","toLowerCase","visibleTodos","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.05fda2c7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"labelStyle\":\"Filter_labelStyle__d6aNb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headStyle\":\"TodoContact_headStyle__85UD-\",\"labelStyle\":\"TodoContact_labelStyle__2sHVN\",\"inputStyle\":\"TodoContact_inputStyle__3Sl2P\",\"button\":\"TodoContact_button__3ToIs\",\"titleText\":\"TodoContact_titleText__L19_2\"};","import React, { Component } from 'react';\r\nimport s from './TodoContact.module.css';\r\n// import shortid from 'shortid';\r\n\r\nclass TodoContact extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.onSubmit(this.state.name, this.state.number);\r\n\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className={s.titleText}>\r\n        <h1>Phonebook</h1>\r\n        <form onSubmit={this.handleSubmit} className={s.headStyle}>\r\n          <label className={s.labelStyle}>\r\n            Name\r\n            <input\r\n              className={s.inputStyle}\r\n              name=\"name\"\r\n              value={this.state.name}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n          <label className={s.labelStyle}>\r\n            Number\r\n            <input\r\n              className={s.inputStyle}\r\n              name=\"number\"\r\n              value={this.state.number}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n          <button type=\"submit\" className={s.button}>\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoContact;","import React from 'react';\r\nimport s from './ContactsList.module.css';\r\nimport PropTypes from 'prop-types';\r\n// import shortid from 'shortid';\r\n\r\nconst ContactsList = ({ contacts, onDeleteContact }) => (\r\n  <ul className={s.contacts}>\r\n    {contacts.map(({ id, name, number }) => (\r\n      <li className={s.listItem} key={id}>\r\n        <p>\r\n          {name}: {number}\r\n        </p>\r\n        <button\r\n          type=\"button\"\r\n          className={s.button}\r\n          onClick={() => onDeleteContact(id)}\r\n        >\r\n          Delete\r\n        </button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nContactsList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactsList;","import React from 'react';\r\nimport s from './Filter.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <div className={s.filterTitle}>\r\n    <h2>Contacts</h2>\r\n    <label className={s.labelStyle}>\r\n      Find contacts by name\r\n      <input type=\"text\" value={value} onChange={onChange} />\r\n    </label>\r\n  </div>\r\n);\r\n\r\nFilter.defaultProps = {\r\n  filterValue: '',\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;","import React, { Component } from 'react';\nimport TodoContact from './components/TodoContact';\nimport ContactsList from './components/ContactsList';\nimport Filter from './components/Filter';\n\nimport shortid from 'shortid';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  addContact = (name, number) => {\n    const todo = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n    const { contacts } = this.state;\n    const alreadyInContacts = contacts.find(\n      contact => contact.name === todo.name,\n    );\n    if (alreadyInContacts) {\n      alert(`${alreadyInContacts.name} is already in contacts.`);\n      return;\n    }\n\n    this.setState(prevState => ({\n      contacts: [todo, ...prevState.contacts],\n    }));\n  };\n\n  ChangeFilter = e => {\n    const { value } = e.currentTarget;\n\n    this.setState({ filter: value });\n  };\n\n  deleteContact = todoId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(todo => todo.id !== todoId),\n    }));\n  };\n\n  render() {\n    const normalizedFilter = this.state.filter.toLowerCase();\n    const visibleTodos = this.state.contacts.filter(todo =>\n      todo.name.toLowerCase().includes(normalizedFilter),\n    );\n\n    return (\n      <>\n        <TodoContact onSubmit={this.addContact} />\n        <Filter value={this.state.filter} onChange={this.ChangeFilter} />\n        <ContactsList\n          contacts={visibleTodos}\n          onDeleteContact={this.deleteContact}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"ContactsList_contacts__w942y\",\"listItem\":\"ContactsList_listItem__2nYCx\",\"button\":\"ContactsList_button__2MA3c\"};"],"sourceRoot":""}